function [result, answer, answer_elapsed_time, session_elapsed_time, session_start_time_abs, session_end_time_abs] = session(window, sync_async)
% perform a single session, with a specific delay
% window: the window on which to render on (PsychToolbox)
% sync_async: specify the delay for the test
% returns 1 if the answer is correct ('s' when the delay is low, 's' when
% it is higher)

    global sessionActive peak_count peak_detected listener
    % reset your counters each time
    peak_count    = 0;
    peak_detected = false;

    suggestion_text = 'Premi [E] per uscire';
   
    suggestion_x = 3000;
    suggestion_y = 100;

    white_col = [255,255,255];
    DrawFormattedText(window, suggestion_text, 'right', [], white_col);

    % draw your instructions
    Screen('FillRect', window, [0 0 0]);
    DrawFormattedText(window, 'PREPARATI PER LA PROSSIMA SESSIONE. PREMI UN TASTO PER COMINCIARE', ...
                      'center','center',[255 255 255]);
    Screen('Flip', window);
    KbStrokeWait;

    %Screen('FillRect', window, [0 0 0]);
    %DrawFormattedText(window, 'Playing peaks…', 'center','center',[255 255 255]);
    %Screen('Flip', window);

    %-----------------------
    % Read the image
    %-----------------------
    imageMatrix = imread('speaker_icon_white.png');  % Load your PNG image
    
    %-----------------------
    % Make texture from the image
    %-----------------------
    %imageTexture = Screen('MakeTexture', window, imageMatrix);

    % LET THE CALLBACK START WORKING

    % record absolute start time
    session_start_time_abs = datetime('now','Format','HH:mm:ss');

    session_time_start = tic;
    % BLOCK here until 10 peaks OR user presses E
    sessionActive = true;
    while peak_count < 10
        pause(0.0001)
        %drawnow limitrate 
%         [down, ~, kc] = KbCheck;  
%         if down && kc(KbName('E'))
%             break
%         end
    end
    sessionActive = false;

    session_elapsed_time = toc(session_time_start);
    
    session_end_time_abs = datetime('now','Format','HH:mm:ss');
    % SESSION OVER


    % --- NEW PART: ask async vs sync ---
    Screen('FillRect', window, [0 0 0]);
    instr = 'Premi "a" per asincrono,  "s" per sincrono';
    DrawFormattedText(window, instr, 'center','center',[255 255 255]);
    Screen('Flip', window);
    answer_start_time = tic;
    % Wait for a or s
    result = 0;  % default
    valid = false;
    while ~valid
        [down, ~, kc] = KbCheck;
        if down
            if kc(KbName('a')) || kc(KbName('A'))
                answer = 'a';
                valid = true;
            elseif kc(KbName('s')) || kc(KbName('S'))
                answer = 's';
                valid = true;
            end
        end
        pause(0.01);
    end
    answer_elapsed_time = toc(answer_start_time);
    
    % compare to sync_async argument
    if strcmpi(answer, sync_async)
        result = 1;
    end


    % show “done” screen
    %Screen('FillRect', window, [0 0 0]);
    %DrawFormattedText(window, 'Done—press any key to continue', ...
    %                  'center','center',[255 255 255]);
    %Screen('Flip', window);
    %KbStrokeWait;
end

